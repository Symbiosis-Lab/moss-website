name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: npm install

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@latest

      - name: Run tests
        run: npm test

      - name: Build frontend
        run: npm run frontend:build

      - name: Build Tauri app (Universal Binary)
        run: tauri build --target universal-apple-darwin

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: moss v${{ steps.version.outputs.VERSION }}
          body: |
            ## Changes in v${{ steps.version.outputs.VERSION }}

            ### Download
            - **macOS**: Download the `.dmg` file below

            ### Installation
            1. Download the `.dmg` file
            2. Open the downloaded file
            3. Drag moss.app to your Applications folder

            ---
            *Built automatically from commit ${{ github.sha }}*
          draft: false
          prerelease: false

      - name: Upload DMG to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src-tauri/target/universal-apple-darwin/release/bundle/dmg/moss_${{ steps.version.outputs.VERSION }}_universal.dmg
          asset_name: moss_v${{ steps.version.outputs.VERSION }}_macOS.dmg
          asset_content_type: application/octet-stream

      - name: Upload App Bundle to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src-tauri/target/universal-apple-darwin/release/bundle/macos/moss.app.tar.gz
          asset_name: moss_v${{ steps.version.outputs.VERSION }}_macOS.app.tar.gz
          asset_content_type: application/gzip